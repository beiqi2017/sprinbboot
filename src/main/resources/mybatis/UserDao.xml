<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.UserDao">
    <resultMap type="com.example.demo.domain.User" id="userMap">
        <id property="uid" column="uid"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="status" column="status"/>
        <collection property="roles" ofType="com.example.demo.domain.Role">
            <id property="rid" column="rid"/>
            <result property="rname" column="rname"/>
            <collection property="modules" ofType="com.example.demo.domain.Module">
                <id property="mid" column="mid"/>
                <result property="mname" column="mname"/>
                <result property="url" column="url"/>
                <result property="type" column="type"/>
                <result property="menu" column="menu"/>
                <result property="pid" column="pid"/>
                <result property="level" column="level"/>
            </collection>
        </collection>
    </resultMap>
    <select id="getUser" parameterType="string" resultMap="userMap">
        SELECT u.*,r.*,m.* FROM user u inner join user_role ur on ur.uid=u.uid 
        inner join role r on r.rid=ur.rid
        inner join module_role mr on mr.rid=r.rid 
        inner join module m on mr.mid=m.mid 
        WHERE username=#{name} and m.type!='menu' and u.status='normal'
    </select>
    
     <select id="list" parameterType="com.example.demo.domain.User" resultType="com.example.demo.domain.User">
       select t.* from ( SELECT u.*,md.rname as rname ,md.rid as rid FROM user u left join 
          (select r.*,ur.uid from role r, user_role ur where r.rid=ur.rid) md 
          on md.uid=u.uid ) t where 1=1 
          <if test="rid!=null">
		 	and t.rid=#{rid}
		 </if>
		  <if test="username!=null and username!=''">
		 	and t.username=#{username}
		 </if>
        <include refid="page" />  
    </select>
    
    
    <select id="findByPage" parameterType="com.example.demo.domain.User" resultType="com.example.demo.domain.User">
        SELECT u.* FROM user u 
    </select>
    
     <select id="findById" parameterType="com.example.demo.domain.User" resultType="com.example.demo.domain.User">
        SELECT u.* FROM user u where u.uid=#{uid}
    </select>
    
      <select id="count" parameterType="com.example.demo.domain.User" resultType="int">
		 select count(1) FROM ( SELECT u.*,md.rname as rname,md.rid as rid FROM user u left join 
          (select r.*,ur.uid from role r, user_role ur where r.rid=ur.rid) md 
          on md.uid=u.uid ) t where 1=1 
		   <if test="rid!=null">
		 	and t.rid=#{rid}
		  </if>
		  <if test="username!=null and username!=''">
		 	and t.username=#{username}
		 </if>
    </select>
    
     <sql id="page">  
        limit  #{start}, #{rows}
    </sql> 
    
    <update id="update" parameterType="com.example.demo.domain.User" >
	    update user set status=#{status}
		 <if test="password!=null and password!=''">
		 	, password=#{password}
		 </if>
		 where uid=#{uid}
	</update>
	
	<update id="upRole" parameterType="com.example.demo.domain.User" >
	    update user_role set rid=#{rid}  where uid=#{uid}
	</update>
	
	 <insert id="add" parameterType="com.example.demo.domain.User" keyProperty="uid" useGeneratedKeys="true">
	     insert into user(username,password,status)  VALUES (#{username},#{password},#{status})
	 </insert>
	 
	 <insert id="addRole" parameterType="com.example.demo.domain.User">
	     insert into user_role(uid,rid)  VALUES (#{uid},#{rid})
	 </insert>
	 
</mapper>